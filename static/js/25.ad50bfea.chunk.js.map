{"version":3,"file":"static/js/25.ad50bfea.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/pages/MoviesPage/MoviesPage.styled.jsx","components/pages/MoviesPage/MoviesPage.jsx","services/tmdb-api.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n`;\n","import { PropTypes } from 'prop-types';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ children }) => {\n  return <List>{children}</List>;\n};\n\nMoviesList.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default MoviesList;\n","import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CardWrapper = styled.div`\n  background-color: rgb(5, 10, 24);\n  color: #fff;\n  border: 1px solid rgb(5, 10, 24);\n  transition: 0.14s ease-out;\n\n  &:hover,\n  &:focus-visible {\n    background-color: #fff;\n    color: rgb(5, 10, 24);\n    transform: translate(-0.25rem, -0.25rem);\n    box-shadow: 0.25rem 0.25rem 0 rgb(5, 10, 24);\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100px;\n  box-sizing: border-box;\n  padding: 15px;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nexport const PosterPlaceholder = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  text-align: center;\n  aspect-ratio: 0.67;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Title = styled.p`\n  margin: 0;\n`;\n\nexport const InfoText = styled.span`\n  font-size: 0.8rem;\n`;\n","import { PropTypes } from 'prop-types';\nimport { MdImageNotSupported } from 'react-icons/md';\nimport { useLocation } from 'react-router-dom';\nimport {\n  CardWrapper,\n  InfoList,\n  InfoText,\n  InfoWrapper,\n  Poster,\n  PosterPlaceholder,\n  StyledLink,\n  Title,\n} from './MoviesListItem.styled';\n\nconst MoviesListItem = ({\n  movie: { id, title, poster_path, vote_average, release_date },\n}) => {\n  const location = useLocation();\n  const poster = poster_path ? (\n    <Poster src={`https://image.tmdb.org/t/p/w342${poster_path}`} alt={title} />\n  ) : (\n    <PosterPlaceholder>\n      <MdImageNotSupported size=\"4rem\" /> Sorry, we don't have poster for this\n      movie\n    </PosterPlaceholder>\n  );\n\n  return (\n    <li>\n      <StyledLink to={`/movies/${id}`} state={location}>\n        <CardWrapper>\n          {poster}\n          <InfoWrapper>\n            <Title>{title}</Title>\n\n            <InfoList>\n              <li>\n                <InfoText>Rating: {vote_average.toFixed(1)}/10</InfoText>\n              </li>\n              <li>\n                <InfoText>\n                  Release year: {release_date.substring(0, 4)}\n                </InfoText>\n              </li>\n            </InfoList>\n          </InfoWrapper>\n        </CardWrapper>\n      </StyledLink>\n    </li>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default MoviesListItem;\n","import { styled } from 'styled-components';\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  padding: 0 10px;\n  font-family: inherit;\n  height: 40px;\n  width: 400px;\n  border: 1px solid rgb(5, 10, 24);\n  border-right: none;\n  transition: 0.14s ease-out;\n\n  &:focus-visible {\n    outline: 2px solid rgb(5, 10, 24);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 0 16px;\n  height: 40px;\n  font-family: inherit;\n  border: none;\n  background-color: rgb(5, 10, 24);\n  border: 1px solid rgb(5, 10, 24);\n  color: #fff;\n  transition: 0.14s ease-out;\n  cursor: pointer;\n\n  &:hover,\n  &:focus-visible {\n    background-color: #fff;\n    color: rgb(5, 10, 24);\n  }\n`;\n","import { useState } from 'react';\nimport { Button, Input } from './SearchForm.styled';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" value={value} onChange={handleChange} />\n        <Button type=\"submit\">Search</Button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 1rem 1rem;\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'services/tmdb-api';\nimport { Wrapper } from './MoviesPage.styled';\nimport Loader from 'components/loaders/Loader';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    getMovies(query);\n  }, [query]);\n\n  const handleSubmit = value => {\n    if (value !== query) setMovies([]);\n\n    if (value === '') {\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: value });\n  };\n\n  const getMovies = async query => {\n    setIsLoading(true);\n\n    try {\n      const data = await getMoviesBySearch(query);\n      setMovies(data.results);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const loadingIndicator = isLoading && <Loader />;\n  const errorMessage = error && (\n    <h2>\n      Ooops, something went wrong... Server says: \"{error}\". Try reloading the\n      page.\n    </h2>\n  );\n  const noResultsMessage = movies.length === 0 &&\n    query !== '' &&\n    !isLoading &&\n    !error && (\n      <h2>Sorry, there are no images matching \"{query}\". Please try again.</h2>\n    );\n  const resultsMessage = query && <h2>Showing results for \"{`${query}`}\"</h2>;\n\n  return (\n    <Wrapper>\n      <SearchForm onSubmit={handleSubmit} />\n      {loadingIndicator}\n      {resultsMessage}\n      {noResultsMessage}\n      {errorMessage}\n      <MoviesList>\n        {movies.map(movie => (\n          <MoviesListItem movie={movie} key={movie.id} />\n        ))}\n      </MoviesList>\n    </Wrapper>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a57930fa8e3f4bde22e6ba98cb5f89d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","CardWrapper","InfoWrapper","_templateObject2","InfoList","_templateObject3","Poster","_templateObject4","PosterPlaceholder","_templateObject5","StyledLink","Link","_templateObject6","Title","_templateObject7","InfoText","_templateObject8","_ref$movie","movie","id","title","poster_path","vote_average","release_date","location","useLocation","poster","src","concat","alt","_jsxs","MdImageNotSupported","size","to","state","toFixed","substring","Input","Button","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","_Fragment","e","preventDefault","type","name","onChange","_ref2","target","Wrapper","_searchParams$get","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesBySearch","sent","results","t0","message","finish","stop","_x","apply","arguments","loadingIndicator","Loader","errorMessage","noResultsMessage","length","resultsMessage","SearchForm","MoviesList","map","MoviesListItem","axios","api_key","getTrendingMovies","response","abrupt","_callee2","_context2","getMovieById","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","getCredits","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}