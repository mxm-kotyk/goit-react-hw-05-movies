{"version":3,"file":"static/js/856.300b7934.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/pages/HomePage/HomePage.styled.jsx","components/pages/HomePage/HomePage.jsx","services/tmdb-api.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n`;\n","import { PropTypes } from 'prop-types';\nimport { List } from './MoviesList.styled';\n\nconst MoviesList = ({ children }) => {\n  return <List>{children}</List>;\n};\n\nMoviesList.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default MoviesList;\n","import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CardWrapper = styled.div`\n  background-color: rgb(5, 10, 24);\n  color: #fff;\n  border: 1px solid rgb(5, 10, 24);\n  transition: 0.14s ease-out;\n\n  &:hover,\n  &:focus-visible {\n    background-color: #fff;\n    color: rgb(5, 10, 24);\n    transform: translate(-0.25rem, -0.25rem);\n    box-shadow: 0.25rem 0.25rem 0 rgb(5, 10, 24);\n  }\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100px;\n  box-sizing: border-box;\n  padding: 15px;\n`;\n\nexport const InfoList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nexport const PosterPlaceholder = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  text-align: center;\n  aspect-ratio: 0.67;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const Title = styled.p`\n  margin: 0;\n`;\n\nexport const InfoText = styled.span`\n  font-size: 0.8rem;\n`;\n","import { PropTypes } from 'prop-types';\nimport { MdImageNotSupported } from 'react-icons/md';\nimport { useLocation } from 'react-router-dom';\nimport {\n  CardWrapper,\n  InfoList,\n  InfoText,\n  InfoWrapper,\n  Poster,\n  PosterPlaceholder,\n  StyledLink,\n  Title,\n} from './MoviesListItem.styled';\n\nconst MoviesListItem = ({\n  movie: { id, title, poster_path, vote_average, release_date },\n}) => {\n  const location = useLocation();\n  const poster = poster_path ? (\n    <Poster src={`https://image.tmdb.org/t/p/w342${poster_path}`} alt={title} />\n  ) : (\n    <PosterPlaceholder>\n      <MdImageNotSupported size=\"4rem\" /> Sorry, we don't have poster for this\n      movie\n    </PosterPlaceholder>\n  );\n\n  return (\n    <li>\n      <StyledLink to={`/movies/${id}`} state={location}>\n        <CardWrapper>\n          {poster}\n          <InfoWrapper>\n            <Title>{title}</Title>\n\n            <InfoList>\n              <li>\n                <InfoText>Rating: {vote_average.toFixed(1)}/10</InfoText>\n              </li>\n              <li>\n                <InfoText>\n                  Release year: {release_date.substring(0, 4)}\n                </InfoText>\n              </li>\n            </InfoList>\n          </InfoWrapper>\n        </CardWrapper>\n      </StyledLink>\n    </li>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default MoviesListItem;\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 1rem 1rem;\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/tmdb-api';\nimport { Wrapper } from './HomePage.styled';\nimport Loader from 'components/loaders/Loader';\n\nconst HomePage = () => {\n  const [trending, setTrending] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setIsLoading(true);\n\n      try {\n        const data = await getTrendingMovies();\n        setTrending(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  const loadingIndicator = isLoading && <Loader />;\n  const errorMessage = error && (\n    <h2>\n      Ooops, something went wrong... Server says: \"{error}\". Try reloading the\n      page.\n    </h2>\n  );\n\n  return (\n    <Wrapper>\n      <h1>Trending Today</h1>\n      {loadingIndicator}\n      {errorMessage}\n      <MoviesList>\n        {trending.map(movie => (\n          <MoviesListItem movie={movie} key={movie.id} />\n        ))}\n      </MoviesList>\n    </Wrapper>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'a57930fa8e3f4bde22e6ba98cb5f89d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","_ref","children","_jsx","CardWrapper","InfoWrapper","_templateObject2","InfoList","_templateObject3","Poster","_templateObject4","PosterPlaceholder","_templateObject5","StyledLink","Link","_templateObject6","Title","_templateObject7","InfoText","_templateObject8","_ref$movie","movie","id","title","poster_path","vote_average","release_date","location","useLocation","poster","src","concat","alt","_jsxs","MdImageNotSupported","size","to","state","toFixed","substring","Wrapper","_useState","useState","_useState2","_slicedToArray","trending","setTrending","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getTrendingMovies","sent","results","t0","message","finish","stop","apply","arguments","loadingIndicator","Loader","errorMessage","MoviesList","map","MoviesListItem","axios","api_key","response","abrupt","getMoviesBySearch","_ref2","_callee2","query","_context2","_x","getMovieById","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","getCredits","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}