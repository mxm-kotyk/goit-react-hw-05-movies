{"version":3,"file":"static/js/294.7e9625e0.chunk.js","mappings":"oKAoBA,IAjBuB,SAAHA,GAAkC,IAADC,EAAAD,EAA3BE,MAASC,EAAEF,EAAFE,GAAIC,EAAKH,EAALG,MAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaR,GAAMS,MAAOP,EAASG,SACxCJ,KAIT,C,6HCYA,EAvBmB,SAAHJ,GAAsB,IAAhBa,EAAQb,EAARa,SACpBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAYtB,OACET,EAAAA,EAAAA,KAAAa,EAAAA,SAAA,CAAAZ,UACEa,EAAAA,EAAAA,MAAA,QAAMR,SARW,SAAAS,GACnBA,EAAEC,iBACFV,EAASK,GACTC,EAAS,GACX,EAIiCX,SAAA,EAC3BD,EAAAA,EAAAA,KAAA,SAAOiB,KAAK,OAAOC,KAAK,QAAQC,MAAOR,EAAOS,SAb/B,SAAHC,GAA+B,IAAfV,EAAKU,EAAfC,OAAUX,MAChCC,EAASD,EACX,KAYMX,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAAQhB,SAAC,eAI9B,E,iBCoBA,EArCmB,WAAO,IAADsB,EACvBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAhB,EAAAA,EAAAA,GAAAc,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAiC,QAA5BN,EAAGI,EAAaG,IAAI,gBAAQ,IAAAP,EAAAA,EAAI,GAC3ChB,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCwB,EAAMtB,EAAA,GAAEuB,EAASvB,EAAA,IAExBwB,EAAAA,EAAAA,YAAU,WACHJ,GACLK,EAAUL,EACZ,GAAG,CAACA,IAEJ,IASMK,EAAS,eAAAzC,GAAA0C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMT,GAAK,IAAAU,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACRC,EAAAA,EAAAA,IAAkBf,GAAO,KAAD,EAArCU,EAAIE,EAAAI,KACVb,EAAUO,EAAKO,SAAS,wBAAAL,EAAAM,OAAA,GAAAT,EAAA,KACzB,gBAHcU,GAAA,OAAAvD,EAAAwD,MAAA,KAAAC,UAAA,KAKf,OACEpC,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAZ,SAAA,EACED,EAAAA,EAAAA,KAACmD,EAAU,CAAC7C,SAhBK,SAAAK,GACnB,GAAc,KAAVA,EAGF,OAFAiB,EAAgB,CAAC,QACjBI,EAAU,IAGZJ,EAAgB,CAAEC,MAAOlB,GAC3B,IAUKkB,IAASf,EAAAA,EAAAA,MAAA,MAAAb,SAAA,CAAI,wBAAqB,GAAAG,OAAIyB,GAAQ,QAC/C7B,EAAAA,EAAAA,KAAA,MAAAC,SACG8B,EAAOqB,KAAI,SAAAzD,GAAK,OACfK,EAAAA,EAAAA,KAACqD,EAAAA,EAAc,CAAC1D,MAAOA,GAAYA,EAAMC,GAAM,QAKzD,C,sLCrCA0D,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,oCAOT,IAAMC,EAAiB,eAAA/D,GAAA0C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAmB,EAAA,OAAArB,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRW,EAAAA,EAAAA,IAAU,uBAAuB,KAAD,EAAzC,OAARG,EAAQhB,EAAAI,KAAAJ,EAAAiB,OAAA,SACPD,EAASlB,MAAI,wBAAAE,EAAAM,OAAA,GAAAT,EAAA,KACrB,kBAH6B,OAAA7C,EAAAwD,MAAA,KAAAC,UAAA,KAKjBN,EAAiB,eAAAvB,GAAAc,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsB,EAAM9B,GAAK,IAAA4B,EAAA,OAAArB,EAAAA,EAAAA,KAAAI,MAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAAAiB,EAAAjB,KAAA,EACnBW,EAAAA,EAAAA,IAAU,uBAADlD,OAAwByB,IAAS,KAAD,EAAlD,OAAR4B,EAAQG,EAAAf,KAAAe,EAAAF,OAAA,SACPD,EAASlB,MAAI,wBAAAqB,EAAAb,OAAA,GAAAY,EAAA,KACrB,gBAH6BX,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,KAKjBW,EAAY,eAAAC,GAAA3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0B,EAAMnE,GAAE,IAAA6D,EAAA,OAAArB,EAAAA,EAAAA,KAAAI,MAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACXW,EAAAA,EAAAA,IAAU,UAADlD,OAAWR,IAAM,KAAD,EAAlC,OAAR6D,EAAQO,EAAAnB,KAAAmB,EAAAN,OAAA,SACPD,EAASlB,MAAI,wBAAAyB,EAAAjB,OAAA,GAAAgB,EAAA,KACrB,gBAHwBE,GAAA,OAAAH,EAAAb,MAAA,KAAAC,UAAA,KAKZgB,EAAU,eAAAC,GAAAhC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA+B,EAAMxE,GAAE,IAAA6D,EAAA,OAAArB,EAAAA,EAAAA,KAAAI,MAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EACTW,EAAAA,EAAAA,IAAU,UAADlD,OAAWR,EAAE,aAAY,KAAD,EAA1C,OAAR6D,EAAQY,EAAAxB,KAAAwB,EAAAX,OAAA,SACPD,EAASlB,MAAI,wBAAA8B,EAAAtB,OAAA,GAAAqB,EAAA,KACrB,gBAHsBE,GAAA,OAAAH,EAAAlB,MAAA,KAAAC,UAAA,KAKVqB,EAAU,eAAAC,GAAArC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAoC,EAAM7E,GAAE,IAAA6D,EAAA,OAAArB,EAAAA,EAAAA,KAAAI,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACTW,EAAAA,EAAAA,IAAU,UAADlD,OAAWR,EAAE,aAAY,KAAD,EAA1C,OAAR6D,EAAQiB,EAAA7B,KAAA6B,EAAAhB,OAAA,SACPD,EAASlB,MAAI,wBAAAmC,EAAA3B,OAAA,GAAA0B,EAAA,KACrB,gBAHsBE,GAAA,OAAAH,EAAAvB,MAAA,KAAAC,UAAA,I","sources":["components/MoviesListItem/MoviesListItem.jsx","components/SearchForm/SearchForm.jsx","components/pages/MoviesPage.jsx","services/tmdb-api.js"],"sourcesContent":["import { PropTypes } from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesListItem = ({ movie: { id, title } }) => {\n  const location = useLocation();\n\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={location}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n};\n\nexport default MoviesListItem;\n","import { useState } from 'react';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setValue(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" velue={value} onChange={handleChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default SearchForm;\n","import MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesBySearch } from 'services/tmdb-api';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!query) return;\n    getMovies(query);\n  }, [query]);\n\n  const handleSubmit = value => {\n    if (value === '') {\n      setSearchParams({});\n      setMovies([]);\n      return;\n    }\n    setSearchParams({ query: value });\n  };\n\n  const getMovies = async query => {\n    const data = await getMoviesBySearch(query);\n    setMovies(data.results);\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      {query && <h2>Showing results for \"{`${query}`}\"</h2>}\n      <ul>\n        {movies.map(movie => (\n          <MoviesListItem movie={movie} key={movie.id} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a57930fa8e3f4bde22e6ba98cb5f89d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n"],"names":["_ref","_ref$movie","movie","id","title","location","useLocation","_jsx","children","Link","to","concat","state","onSubmit","_useState","useState","_useState2","_slicedToArray","value","setValue","_Fragment","_jsxs","e","preventDefault","type","name","velue","onChange","_ref2","target","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","movies","setMovies","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","getMoviesBySearch","sent","results","stop","_x","apply","arguments","SearchForm","map","MoviesListItem","axios","api_key","getTrendingMovies","response","abrupt","_callee2","_context2","getMovieById","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","getCredits","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}