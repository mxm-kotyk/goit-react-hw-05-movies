{"version":3,"file":"static/js/576.497f3b7a.chunk.js","mappings":"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","sources":["components/pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/pages/MovieDetailsPage/MovieDetailsPage.jsx","services/tmdb-api.js"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin: 1rem 1rem;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 0.5rem 0.75rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  text-decoration: none;\n  background-color: rgb(5, 10, 24);\n  border: 1px solid rgb(5, 10, 24);\n  color: #fff;\n  transition: 0.14s ease-out;\n  &:hover,\n  &:focus-visible {\n    background-color: #fff;\n    color: rgb(5, 10, 24);\n    transform: translate(-0.25rem, -0.25rem);\n    box-shadow: 0.25rem 0.25rem 0 rgb(5, 10, 24);\n  }\n`;\n\nexport const LinksWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const BackLink = styled(StyledLink)`\n  position: absolute;\n  top: 16px;\n  left: 270px;\n  padding: 0.75rem 1rem;\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 500px;\n  height: 100%;\n`;\n\nexport const Text = styled.span`\n  font-weight: 700;\n`;\n\nexport const PosterPlaceholder = styled.div`\n  min-width: 500px;\n  aspect-ratio: 0.67;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  text-align: center;\n  border: 1px solid rgb(5, 10, 24);\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/tmdb-api';\nimport {\n  BackLink,\n  MovieWrapper,\n  Poster,\n  Text,\n  Wrapper,\n  PosterPlaceholder,\n  StyledLink,\n  LinksWrapper,\n} from './MovieDetailsPage.styled';\nimport { MdImageNotSupported } from 'react-icons/md';\nimport Loader from 'components/loaders/Loader';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [genresArray, setGenresArray] = useState([]);\n  const [countriesArray, setCountriesArray] = useState([]);\n  const [date, setDate] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovie(movieId);\n  }, [movieId]);\n\n  const getMovie = async id => {\n    setIsLoading(true);\n\n    try {\n      const movieData = await getMovieById(id);\n      setMovie(movieData);\n      setGenresArray(movieData.genres);\n      setDate(movieData.release_date);\n      setCountriesArray(movieData.production_countries);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const { title, poster_path, vote_average, overview, runtime, tagline } =\n    movie;\n  const goBackHref = location.state ?? '/movies';\n  const releaseYear = date.substring(0, 4);\n  const userScore = Math.floor(vote_average * 10);\n  const genresList = genresArray.map(genre => genre.name).join(', ');\n  const countriesList = countriesArray.map(country => country.name).join(', ');\n  const poster = poster_path ? (\n    <Poster\n      src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n      alt={title}\n      width=\"500px\"\n    />\n  ) : (\n    <PosterPlaceholder>\n      <MdImageNotSupported size=\"4rem\" /> Sorry, we don't have poster for this\n      movie\n    </PosterPlaceholder>\n  );\n  const loadingIndicator = isLoading && <Loader />;\n  const errorMessage = error && (\n    <h2>\n      Ooops, something went wrong... Server says: \"{error}\". Try reloading the\n      page.\n    </h2>\n  );\n\n  return (\n    <Wrapper>\n      <BackLink to={goBackHref}>Go Back</BackLink>\n      {loadingIndicator}\n      {errorMessage}\n      <MovieWrapper>\n        {poster}\n        <div>\n          <h1>{`${title} (${releaseYear})`}</h1>\n          {tagline !== '' && <p>\"{tagline}\"</p>}\n          <p>\n            <Text>User Score: </Text>\n            {userScore}%\n          </p>\n          <p>\n            <Text>Duration: </Text>\n            {runtime} min.\n          </p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresList}</p>\n          <h2>Countries</h2>\n          <p>{countriesList.length === 0 ? <span>N/A</span> : countriesList}</p>\n          <div>\n            <h2>Additional information</h2>\n            <LinksWrapper>\n              <StyledLink to=\"cast\" state={goBackHref}>\n                Cast\n              </StyledLink>\n              <StyledLink to=\"reviews\" state={goBackHref}>\n                Reviews\n              </StyledLink>\n            </LinksWrapper>\n            <Suspense fallback={<h1>Loading...</h1>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n      </MovieWrapper>\n    </Wrapper>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a57930fa8e3f4bde22e6ba98cb5f89d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","LinksWrapper","_templateObject3","BackLink","_templateObject4","MovieWrapper","_templateObject5","Poster","_templateObject6","Text","_templateObject7","PosterPlaceholder","_templateObject8","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","genresArray","setGenresArray","_useState5","_useState6","countriesArray","setCountriesArray","_useState7","_useState8","date","setDate","_useState9","_useState10","isLoading","setIsLoading","_useState11","_useState12","error","setError","movieId","useParams","location","useLocation","useEffect","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","movieData","wrap","_context","prev","next","getMovieById","sent","genres","release_date","production_countries","t0","message","finish","stop","_x","apply","arguments","title","poster_path","vote_average","overview","runtime","tagline","goBackHref","state","releaseYear","substring","userScore","Math","floor","genresList","map","genre","name","join","countriesList","country","poster","_jsx","src","concat","alt","width","_jsxs","children","MdImageNotSupported","size","loadingIndicator","Loader","errorMessage","to","length","Suspense","fallback","Outlet","axios","api_key","getTrendingMovies","response","abrupt","data","getMoviesBySearch","_ref2","_callee2","query","_context2","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","getCredits","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}