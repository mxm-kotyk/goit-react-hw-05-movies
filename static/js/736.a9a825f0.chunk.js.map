{"version":3,"file":"static/js/736.a9a825f0.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/tmdb-api.js"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(185px, 1fr));\n  gap: 10px;\n`;\n\nexport const InfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  justify-content: space-between;\n  box-sizing: border-box;\n  padding: 15px;\n`;\n\nexport const CardWrapper = styled.div`\n  width: 185px;\n  background-color: #fff;\n  color: rgb(5, 10, 24);\n  border: 1px solid rgb(5, 10, 24);\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n`;\n\nexport const Foto = styled.img`\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n\nexport const FotoPlaceholder = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  aspect-ratio: 0.67;\n`;\n","import { PropTypes } from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/tmdb-api';\nimport {\n  CardWrapper,\n  Foto,\n  FotoPlaceholder,\n  InfoWrapper,\n  List,\n  Text,\n} from './Cast.styled';\nimport { MdImageNotSupported } from 'react-icons/md';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId);\n  }, [movieId]);\n\n  const getMovieCast = async id => {\n    try {\n      const credits = await getCredits(id);\n      setCast(credits.cast);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const errorMessage = error && (\n    <h2>\n      Ooops, something went wrong... Server says: \"{error}\". Try reloading the\n      page.\n    </h2>\n  );\n\n  return (\n    <div>\n      {errorMessage}\n      <h3>Cast</h3>\n      {cast.length === 0 ? (\n        <p>We don't have any information about cast for this movie</p>\n      ) : (\n        <List>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <CardWrapper key={id}>\n              {profile_path ? (\n                <Foto\n                  src={`https://image.tmdb.org/t/p/w185${profile_path}`}\n                  alt={name}\n                />\n              ) : (\n                <FotoPlaceholder>\n                  <MdImageNotSupported size=\"4rem\" />\n                </FotoPlaceholder>\n              )}\n              <InfoWrapper>\n                <Text>{name}</Text>\n                <p>Character: {character}</p>\n              </InfoWrapper>\n            </CardWrapper>\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nCast.propTypes = {\n  id: PropTypes.string,\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a57930fa8e3f4bde22e6ba98cb5f89d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","InfoWrapper","_templateObject2","CardWrapper","_templateObject3","Text","_templateObject4","Foto","_templateObject5","FotoPlaceholder","_templateObject6","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","movieId","useParams","useEffect","getMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","credits","wrap","_context","prev","next","getCredits","sent","t0","message","stop","_x","apply","arguments","errorMessage","_jsxs","children","_jsx","length","map","_ref2","profile_path","name","character","src","concat","alt","MdImageNotSupported","size","axios","api_key","getTrendingMovies","response","abrupt","data","getMoviesBySearch","_callee2","query","_context2","getMovieById","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}