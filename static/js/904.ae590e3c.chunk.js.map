{"version":3,"file":"static/js/904.ae590e3c.chunk.js","mappings":"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","sources":["components/pages/MovieDetailsPage.jsx","services/tmdb-api.js"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieById } from 'services/tmdb-api';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [genresArray, setGenresArray] = useState([]);\n  const [date, setDate] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const goBackHref = location.state ?? '/movies';\n\n  useEffect(() => {\n    getMovie(movieId);\n  }, [movieId]);\n\n  const getMovie = async id => {\n    const movieData = await getMovieById(id);\n    setMovie(movieData);\n    setGenresArray(movieData.genres);\n    setDate(movieData.release_date);\n  };\n\n  const { title, poster_path, vote_average, overview } = movie;\n  const releaseYear = date.substring(0, 4);\n  const userScore = Math.floor(vote_average * 10);\n  const genresList = genresArray.map(genre => genre.name).join(', ');\n\n  return (\n    <div>\n      <Link to={goBackHref}>Go Back</Link>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n          alt={title}\n        />\n        <div>\n          <h1>{`${title} (${releaseYear})`}</h1>\n          <p>User Score: {userScore}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresList}</p>\n        </div>\n      </div>\n      <div>\n        <h2>Additional information</h2>\n        <Link to=\"cast\" state={goBackHref}>\n          Cast\n        </Link>\n        <Link to=\"reviews\" state={goBackHref}>\n          Reviews\n        </Link>\n        <Suspense fallback={<h1>Loading...</h1>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a57930fa8e3f4bde22e6ba98cb5f89d0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data;\n};\n\nexport const getMoviesBySearch = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data;\n};\n"],"names":["_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","genresArray","setGenresArray","_useState5","_useState6","date","setDate","movieId","useParams","location","useLocation","console","log","goBackHref","state","useEffect","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","movieData","wrap","_context","prev","next","getMovieById","sent","genres","release_date","stop","_x","apply","arguments","title","poster_path","vote_average","overview","releaseYear","substring","userScore","Math","floor","genresList","map","genre","name","join","_jsxs","children","_jsx","Link","to","src","concat","alt","Suspense","fallback","Outlet","axios","api_key","getTrendingMovies","response","abrupt","data","getMoviesBySearch","_ref2","_callee2","query","_context2","_ref3","_callee3","_context3","_x2","getReviews","_ref4","_callee4","_context4","_x3","getCredits","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}